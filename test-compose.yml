services:
  test-postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpw
      POSTGRES_DB: gamingrealmdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d gamingrealmdb"]
      interval: 2s
      timeout: 1s
      retries: 5

  tests:
    # we don't need the backend running in its own container here
    # as httpx's client lets you pass in an ASGI app, and then the client can directly call into it
    # see: https://www.python-httpx.org/async/#calling-into-python-web-apps
    # this should theoretically be more efficient (by avoiding any latency introduced by network calls)
    container_name: tests
    build:
      context: .
      dockerfile: test.Dockerfile
    depends_on:
      test-postgres:
        condition: service_healthy
    environment:
      GR_DATABASE_URL: postgres://admin:adminpw@postgres:5432/gamingrealmdb
    volumes:
      - .:/GR-backend
